package ReturnPKTest;

import static org.junit.Assert.*;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;

import org.junit.Test;

import shopping.util.JdbcUtil;

/**
 * @author jianwu.zhang
 * 获取主键
 */
public class ReturnPKTest {
	
	
	/**
	 * Statement方式获取PK
	 * Statement:
	 *     int executeUpdate(String sql, int autoGeneratedKeys) 
	 *     		执行给定的 SQL 语句，并用给定标志通知驱动程序由此 Statement 生成的自动生成键是否可用于获取。
	 *     		sql - SQL 数据操作语言（Data Manipulation Language，DML）语句，
	 *     		如 INSERT、UPDATE 或 DELETE；或者是不返回任何内容的 SQL 语句，如 DDL 语句。
	 *     		autoGeneratedKeys - 指示自动生成的键是否可用于获取的标志；
	 *     				Statement.RETURN_GENERATED_KEYS 
	 *     				Statement.NO_GENERATED_KEYS 
	 *     ResultSet getGeneratedKeys() throws SQLException
	 *     			         获取由于执行此 Statement 对象而创建的所有自动生成的键。
	 *     				如果此 Statement 对象没有生成任何键，则返回空的 ResultSet 对象。 
	 */
	@Test
	public void testStatement() throws Exception {
		Connection conn = JdbcUtil.INSTANCE.getConn();
		Statement st = conn.createStatement();
		String sql = "INSERT INTO t_user (username, password) VALUES('张飞', 'password')";
		int cnt = st.executeUpdate(sql, Statement.RETURN_GENERATED_KEYS);
		ResultSet rs = st.getGeneratedKeys();
		if (rs.next()) {
			int key = rs.getInt(1);
			System.out.println(key);
		}
		JdbcUtil.INSTANCE.close(conn, st, null);
	}
	
	/**
	 * PrepareStatement方式获取PK
	 * PreparedStatement prepareStatement(String sql,int autoGeneratedKeys) throws SQLException
	 * 	参数：sql - 可能包含一个或多个 '?' IN 参数占位符的 SQL 语句
	 * 		autoGeneratedKeys - 指示是否应该返回自动生成的键的标志，
	 * 				它是 Statement.RETURN_GENERATED_KEYS 或 Statement.NO_GENERATED_KEYS 之一 
	 * 
	 * ResultSet getGeneratedKeys() throws SQLException
	 *     			         获取由于执行此 Statement 对象而创建的所有自动生成的键。
	 *     				如果此 Statement 对象没有生成任何键，则返回空的 ResultSet 对象。 
	 * 
	 */
	@Test
	public void testPrepareStatement() throws Exception {
		Connection conn = JdbcUtil.INSTANCE.getConn();
		String sql = "INSERT INTO t_user (username, password) VALUES(?,?)";
		PreparedStatement pt = conn.prepareStatement(sql, Statement.RETURN_GENERATED_KEYS);
		pt.setString(1, "关羽");
		pt.setString(2, "guanyu");
		int cnt = pt.executeUpdate();
		if (cnt > 0) {
			ResultSet rs= pt.getGeneratedKeys();
			if (rs.next()) {
				int key = rs.getInt(1);
				System.out.println(key);
			}
		}
		JdbcUtil.INSTANCE.close(conn, pt, null);
	}
}
